/*******************************************************************************************/
/*******************************************************************************************/
/*******************************	Author: Abanoub Ramsis	********************************/
/*******************************	Layer: HAL				********************************/
/*******************************	AWC: CLCD				********************************/
/*******************************	Version: 1.0			********************************/
/*******************************************************************************************/
/*******************************************************************************************/

#include"util/delay.h"

#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include"DIO_interface.h"

#include "CLCD_private.h"
#include "CLCD_interface.h"
#include "CLCD_config.h"

void CLCD_voidSendData(u8 copy_u8Data)
{

		/*Set RS pin to HIGH for Data*/
		MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_RS_PIN,PIN_HIGH);

		/*Set RW pin to LOW for write*/
		MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_RW_PIN,PIN_LOW);

		/*write the Data on the data port*/
		MDIO_u8SetPortValue(CLCD_DATA_PORT,copy_u8Data);

		/*Send enable pulse*/
		MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_E_PIN,PIN_HIGH);
		_delay_ms(2);
		MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_E_PIN,PIN_LOW);


}

void CLCD_voidSendCommand(u8 copy_u8Command)
{
	/*Set RS pin to LOW for command*/
	MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_RS_PIN,PIN_LOW);

	/*Set RW pin to LOW for write*/
	MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_RW_PIN,PIN_LOW);

	/*write the command on the data port*/
	MDIO_u8SetPortValue(CLCD_DATA_PORT,copy_u8Command);

	/*Send enable pulse*/
	MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_E_PIN,PIN_HIGH);
	_delay_ms(2);
	MDIO_u8SetPinValue(CLCD_CONTROL_PORT,CLCD_E_PIN,PIN_LOW);

}

void CLCD_voidInit(void)
{

	/*set data port to output*/
	MDIO_u8SetPortDirection(CLCD_DATA_PORT,PORT_OUTPUT);

	/*set the control pins to output*/
	MDIO_u8SetPinDirection(CLCD_CONTROL_PORT,CLCD_E_PIN,PIN_OUTPUT);
	MDIO_u8SetPinDirection(CLCD_CONTROL_PORT,CLCD_RS_PIN,PIN_OUTPUT);
	MDIO_u8SetPinDirection(CLCD_CONTROL_PORT,CLCD_RW_PIN,PIN_OUTPUT);

	/*wait more than 30ms after startup*/
	_delay_ms(40);

/*set the display options*/

#if CLCD_DISPLAY_OPTION==TWO_lines_5x10_8Pins

	CLCD_voidSendCommand(CLCD_TWO_lines_5x10_8Pins);


#endif


	/*Set cursor to move right when writing*/
	CLCD_voidSendCommand(CLCD_INC_CURSOR);

	/*Set display on and cursor to blink*/
	CLCD_voidSendCommand(CLCD_DISPLAY_ON_CURSOR_BLINK);


	/*clear the display*/
	CLCD_voidSendCommand(CLCD_CLR_DISPLAY);





}
